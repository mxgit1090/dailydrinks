{"version":3,"sources":["components/Button/Button.const.js","components/Button/Button.js","components/Header/Header.js","components/Order/Order.js","components/Form/Form.js","App.js","serviceWorker.js","index.js"],"names":["TYPE","Button","props","type","children","onClick","className","defaultProps","Header","formOpen","orderExist","onAdd","Order","name","price","notes","onEdit","onDelete","Form","order","submit","cancel","useState","error","setError","setName","setPrice","setNotes","setErrorField","fieldName","fieldErrored","prevError","id","htmlFor","placeholder","value","onChange","event","target","min","replace","rows","priceValid","parseInt","Number","isNaN","isInteger","checkPriceValid","App","currentOrder","setCurrentOrder","orders","setOrders","prevOrders","orderIndex","findIndex","slice","length","editOrder","nanoid","addOrder","map","key","filter","deleteOrder","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d116bbd7.chunk.js","sourcesContent":["export const TYPE = {\n  PRIMARY: 'button__type-primary',\n  NORMAL: 'button__type-normal',\n  DANGER: 'button__type-danger'\n};\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.scss';\nimport { TYPE } from './Button.const';\n\nfunction Button(props) {\n  const {\n    type,\n    children,\n    onClick\n  } = props;\n  return (\n    <button\n      className={`button ${type}`}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  type: PropTypes.oneOf(Object.values(TYPE)),\n  children: PropTypes.any.isRequired,\n  onClick: PropTypes.func\n};\n\nButton.defaultProps = {\n  type: TYPE.NORMAL,\n  onClick: () => {}\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Header.scss';\nimport Button, { TYPE } from '../Button';\n\nfunction Header(props) {\n  const {\n    formOpen,\n    orderExist,\n    onAdd,\n  } = props;\n  return (\n    <h1>\n      <div className=\"header__title\">\n        {!formOpen\n          ? 'Daily Drinks'\n          : `${orderExist ? 'Edit' : 'Add'} Order`\n        }\n      </div>\n      {!formOpen &&\n      <Button\n        type={TYPE.PRIMARY}\n        onClick={onAdd}\n      >\n        Add\n      </Button>\n    }\n    </h1>\n  );\n}\n\nHeader.propTypes = {\n  formOpen: PropTypes.bool,\n  orderExist: PropTypes.bool,\n  onAdd: PropTypes.func,\n};\n\nHeader.defaultProps = {\n  formOpen: false,\n  orderExist: false,\n  onAdd: () => {}\n};\n\nexport default Header;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Button, { TYPE } from '../Button';\nimport './Order.scss';\n\nfunction Order(props) {\n  const {\n    name,\n    price,\n    notes,\n    onEdit,\n    onDelete,\n  } = props;\n  return (\n    <div className=\"order__container\">\n      <h2 className=\"order__name\">{name}</h2>\n      <h3 className=\"order__price\">$ {price}</h3>\n      <div className=\"order__notes\">{notes}</div>\n      <div className=\"order__button-group\">\n        <Button\n          onClick={onEdit}\n        >\n          Edit\n        </Button>\n        <Button\n          type={TYPE.DANGER}\n          onClick={onDelete}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nOrder.propTypes = {\n  name: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  notes: PropTypes.string,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n};\n\nOrder.defaultProps = {\n  notes: null,\n  onEdit: () => {},\n  onDelete: () => {},\n};\n\nexport default Order\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button, { TYPE } from '../Button';\nimport './Form.scss';\n\nfunction checkPriceValid(value) {\n  const price = parseInt(value, 10);\n  return !Number.isNaN(price) && Number.isInteger(price) && price >= 0;\n}\n\nfunction Form(props) {\n  const {\n    order,\n    submit,\n    cancel\n  } = props;\n  // Init only once for existing props\n  const [error, setError] = useState({});\n  const [name, setName] = useState(order?.name ?? '');\n  const [price, setPrice] = useState(order?.price ?? 0);\n  const [notes, setNotes] = useState(order?.notes ?? '');\n  const setErrorField = (fieldName, fieldErrored) => {\n    setError(prevError => ({\n      ...prevError,\n      [fieldName]: fieldErrored\n    }));\n  }\n  const onSubmit = () => {\n    // Check required fields:\n    const priceValid = checkPriceValid(price);\n    if (name && priceValid) {\n      submit({\n        id: order?.id ?? null,\n        name,\n        price: parseInt(price, 10),\n        notes,\n      });\n    } else {\n      setError(prevError => ({\n        ...prevError,\n        ...(!name ? { name: true } : {}),\n        ...(!priceValid ? { price: true } : {})\n      }));\n    }\n  };\n  return (\n    <div id=\"form\">\n      <label\n        htmlFor=\"name\"\n        className={`form__label ${error.name && 'form__label-alert'}`}\n      >\n        <span className=\"form__label-alert\">*</span>Name\n      </label>\n      <input\n        name=\"name\"\n        className={`form__input ${error.name && 'form__input-alert'}`}\n        placeholder=\"Please input name\"\n        value={name}\n        onChange={event => {\n          setName(event.target.value);\n          setErrorField('name', false);\n        }}\n      />\n      <label\n        htmlFor=\"price\"\n        className={`form__label ${error.price && 'form__label-alert'}`}\n      >\n        <span className=\"form__label-alert\">*</span>Price\n      </label>      \n      <input\n        name=\"price\"\n        className={`form__input ${error.price && 'form__input-alert'}`}\n        type=\"number\"\n        min=\"0\"\n        placeholder=\"Please input price number\"\n        value={price}\n        onChange={event => {\n          const value = event.target.value?.replace?.(/^0(\\d.*)/, '$1');\n          setPrice(value);\n          setErrorField('price', false);\n        }}\n      />\n      <label\n        htmlFor=\"notes\"\n        className=\"form__label\"\n      >\n        Notes\n      </label>\n      <textarea\n        name=\"notes\"\n        className=\"form__input\"\n        rows={5}\n        placeholder=\"Please input notes (optional)\"\n        value={notes}\n        onChange={event => {\n          setNotes(event.target.value);\n        }}\n      />\n      <div className=\"form__button-group\">\n        <Button\n          type={TYPE.PRIMARY}\n          onClick={onSubmit}\n        >\n          Submit\n        </Button>\n        <Button\n          type={TYPE.NORMAL}\n          onClick={cancel}\n        >\n          Cancel\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nForm.propTypes = {\n  order: PropTypes.object,\n  submit: PropTypes.func,\n};\n\nForm.defaultProps = {\n  order: null,\n  submit: () => {},\n  cancel: () => {}\n};\n\nexport default Form;\n","import React, { useState } from 'react';\nimport nanoid from 'nanoid';\nimport './App.scss';\nimport Header from './components/Header';\nimport Order from './components/Order';\nimport Form from './components/Form';\n\n/*\nhttps://github.com/17media/frontend-hq/blob/master/pretest2.md\n*/\n\nfunction App() {\n  const [currentOrder, setCurrentOrder] = useState(null);\n  const [orders, setOrders] = useState([]);\n  const addOrder = order => {\n    setOrders(prevOrders => ([\n      ...prevOrders,\n      {\n        ...order,\n        id: nanoid(10)\n      },\n    ]));\n  };\n  const editOrder = order => {\n    setOrders(prevOrders => {\n      const orderIndex = prevOrders.findIndex(({ id }) => id === order.id)\n      if (orderIndex < 0) return prevOrders;\n      return [\n        ...prevOrders.slice(0, orderIndex),\n        order,\n        ...prevOrders.slice(orderIndex + 1, prevOrders.length),\n      ];\n    });\n  };\n  const deleteOrder = order => {\n    setOrders(prevOrders =>  \n      prevOrders.filter(({ id }) => id !== order?.id)\n    );\n  };\n  const formOpen = currentOrder !== null; \n  return (\n    <div className=\"app__container\">\n      <Header\n        formOpen={formOpen}\n        orderExist={!!(currentOrder?.id)}\n        onAdd={() => {\n          setCurrentOrder({});\n        }}\n      />\n      {formOpen\n        ? (\n          <Form\n            order={currentOrder}\n            submit={order => {\n              if (order.id) {\n                editOrder(order);\n              } else {\n                addOrder(order);\n              }\n              setCurrentOrder(null);\n            }}\n            cancel={() => {\n              setCurrentOrder(null);\n            }}\n          />\n        )\n        : (\n          <div id=\"orders\">\n            {orders.map(order => (\n              <Order\n                key={order.id}\n                name={order.name}\n                price={order.price}\n                notes={order.notes}\n                onEdit={() => {\n                  setCurrentOrder(order);\n                }}\n                onDelete={() => {\n                  deleteOrder(order);\n                }}\n              />\n            ))}\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}